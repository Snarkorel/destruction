//Класс описывает ячейку лабиринта
#ifndef MAZEMATRIX_H
#define MAZEMATRIX_H
#include <QString>
#include <QStringList>
/** \class MazeMatrix
* \brief Класс, содержащий матрицу лабиринта.
*
* Карта представляет из себя матрицу ячеек, каждая из которых является стеной 
лабиринта или нет. Данный класс получает карту лабиринта из файла, строит по 
нему матрицу и участвует в обработке столкновений
*/
class MazeMatrix
{
    /**
    * Список строк, хранящий в себе матрицу ячеек лабиринта. Каждая строка 
    данного списка строк является горизонтальной строкой ячеек матрицы лабиринта
    */
		QStringList  	cells;
    /**
    * Атрибут хранит количество колонок в матрице лабиринта
    */
		int 					columns;
    /**
    * Атрибут хранит количество строк в матрице лабиринта
    */
		int						rows;
	public:
    /**
    * Метод принимает адрес файла с лабиринтом и строит матрицу на основе 
    * данных из него. В случае отсутствия файла генерируется исключение 
    * "Can not open file"
    */
		void 					setMatrixFromFile(QString);
    /**
    * Метод возвращает количество колонок в матрице лабиринта
    */
		int 					columnsCount();
    /**
    * Метод возвращает количество строк в матрице лабиринта
    */
		int 					rowsCount();
    /**
    * Метод проверяет валидность данных, полученных из файла. Валидными
    * считаются данные, в которых длины строк (отвечающие за количество колонок)
    * равны. В случае невалидных данных генерируется исключение 
    * "Invalid maze matrix"
    */
		void 					checkMazeValid();
    /**
    * Метод проверяет является ли данная ячейка стенкой лабиринта
    */
		bool					isMaze(int,int);
};

#endif // MAZEMATRIX_H